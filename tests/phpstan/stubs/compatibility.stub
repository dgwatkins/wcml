<?php

// MANUALLY EDITED FILE

// WP Super Cache
function wp_cache_is_enabled() {}

// W3TC
function w3_require_once( $file ) {}
class W3_AdminActions_FlushActionsAdmin {
    public function flush_pgcache() {}
}


// LiteSpeed Cache
class LiteSpeed_Cache_API {
    public static function v( $v ) {}
    public static function force_vary() {}
    public static function vary( $arg1, $arg2, $arg3 ) {}
}

// Relevanssi
/**
 * @param int $post_id
 *
 * @return string|int
 */
function relevanssi_insert_edit( $post_id ) {}

// WooCommerce Stripe Gateway
class WC_Stripe_Helper {
    public static function get_stripe_amount( $total, $currency = '' ) {}
}

// WooCommerce Bookings
class WC_Product_Booking {
    public function __construct( $id ) {}
}
class WC_Booking_Form {
    public function __construct( $id ) {}
}
/**
 * @param  array $posted
 * @param  object $product
 * @return array
 */
function wc_bookings_get_posted_data( $posted, $product ) {}
/**
 * @param  int $id
 * @return WC_Booking|false
 */
function get_wc_booking( $id ) {}

// WooCommerce Composite Products
function is_composite_product() {}

// Name Your Price
class WC_Name_Your_Price_Compatibility {
    /**
     * @param string $version_number
     *
     * @return boolean
     **/
    static function is_nyp_gte( $version_number ) {}
}

// WooCommerce Dynamic Pricing
class WC_Dynamic_Pricing_Advanced_Taxonomy {}
class WC_Dynamic_Pricing_Simple_Taxonomy {}

// WooCommerce Tab Manager
function wc_tab_manager_duplicate_product( $new_id, $original_post ) {}

// WooCommerce Subscriptions
class WC_Subscription {}
class WC_Product_Variable_Subscription {}
class WC_Product_Subscription_Variation {}
class WCS_Email_Customer_Renewal_Invoice {}
function wcs_cart_contains_resubscribe() {}
function wcs_cart_contains_early_renewal() {}

// WooCommerce Product Bundles
class WC_Product_Bundle {
    public function __construct( $id ) {}
}
class WC_Bundled_Item_Data {
    public function __construct( $id ) {}
}

// Mix and Match
/**
 * @param array $item
 * @return boolean
 */
function wc_mnm_is_container_cart_item( $item ) {}

/**
 * @param  array    $container_cart_item
 * @param  array    $cart_contents
 * @param  bool  $return_ids
 * @return array
 */
function wc_mnm_get_child_cart_items( $container_cart_item, $cart_contents = false, $return_ids = false ) {}

/**
 * @param array $item
 * @return boolean
 */
function wc_mnm_maybe_is_child_cart_item( $item ) {}

/**
 * @param  array $child_cart_item
 * @param  array $cart_contents
 * @param  bool  $return_id
 * @return mixed
 */
function wc_mnm_get_cart_item_container( $child_cart_item, $cart_contents = false, $return_id = false ) {}

/**
 * WC_Mix_and_Match_Compatibility Class.
 *
 * Load classes for making Mix and Match compatible with other plugins|woocommerce|legacy.
 */
class WC_MNM_Compatibility
{
    /**
     * Array of deprecated hook handlers.
     *
     * @var array of WC_Deprecated_Hooks
     * @since 2.0.0
     */
    public $deprecated_hook_handlers = array();
    /**
     * The single instance of the class.
     * @var WC_MNM_Compatibility
     *
     * @since 1.9.2
     */
    protected static $_instance = \null;
    /**
     * Main class instance. Ensures only one instance of class is loaded or can be loaded.
     *
     * @static
     * @return WC_Mix_and_Match_Compatibility
     * @since  1.9.2
     */
    public static function get_instance()
    {
    }
    function __construct()
    {
    }
    /**
     * Unload mini-extensions.
     */
    public function unload()
    {
    }
    /**
     * Init compatibility classes.
     */
    public function init()
    {
    }
    /**
     * Checks versions of compatible/integrated/deprecated extensions.
     */
    public function add_compatibility_notices()
    {
    }
    /**
     * Tells if a product is a Name Your Price product, provided that the extension is installed.
     *
     * @param  mixed  $product
     * @return bool
     */
    public function is_nyp($product)
    {
    }
    /**
     * Returns true if the plugin version of MNM is greater than or equal to $version.
     *
     * @since  2.0.0
     *
     * @param  string  $version the version to compare
     * @return bool true if the installed version of MNM is > $version
     */
    public static function is_version_gte($version)
    {
    }
    /**
     * Returns true if the DB version of MNM is greater than or equal to $version.
     *
     * @since  2.0.0
     *
     * @param  string  $version the version to compare
     * @return bool true if the installed version of MNM is > $version
     */
    public static function is_db_version_gte($version)
    {
    }
}
