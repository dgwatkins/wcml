---
image: wptest
variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  WORDPRESS_DB_NAME: wp_test_db
  WORDPRESS_DB_USER: root
  MYSQL_ROOT_PASSWORD: mysql_strong_password

before_script:
- if ! service mysql status; then service mysql start; fi
- mysqladmin -u root password $MYSQL_ROOT_PASSWORD
- 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
- eval $(ssh-agent -s)
- ssh-add <(echo "$SSH_PRIVATE_KEY")
- mkdir -p ~/.ssh
- '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
stages:
- build
- test
- deploy
UnitTestJob:
  image: wptest
  tags:
  - docker
  script:

  # Run composer update for WCML
  - php /composer.phar update

  # Install WPML Core
  - cd ../
  - rm -rf sitepress-multilingual-cms
  - git clone ssh://git@git.onthegosystems.com:10022/wpml/sitepress-multilingual-cms.git
  - cd sitepress-multilingual-cms
  - php /composer.phar update

  # Install WPML TM
  - cd ../
  - rm -rf wpml-translation-management
  - git clone ssh://git@git.onthegosystems.com:10022/wpml/wpml-translation-management.git
  - cd wpml-translation-management
  - php /composer.phar update

  # Install WPML ST
  - cd ../
  - rm -rf wpml-string-translation
  - git clone ssh://git@git.onthegosystems.com:10022/wpml/wpml-string-translation.git
  - cd wpml-string-translation
  - php /composer.phar update

  # Install WPML Media
  - cd ../
  - rm -rf wpml-media-translation
  - git clone ssh://git@git.onthegosystems.com:10022/wpml/wpml-media-translation.git
  - cd wpml-media-translation
  - php /composer.phar update

  # Install WooCommerce
  - cd ../
  - rm -rf woocommerce
  - git clone https://github.com/woothemes/woocommerce.git

  # Install WooCommerce Bookings
  - rm -rf woocommerce-bookings
  - git clone ssh://git@git.onthegosystems.com:10022/wcml/woocommerce-bookings-mirror.git woocommerce-bookings

  # Install WooCommerce Table Rate Shipping
  - rm -rf woocommerce-table-rate-shipping
  - git clone ssh://git@git.onthegosystems.com:10022/wcml/woocommerce-table-rate-shipping-mirror.git woocommerce-table-rate-shipping

  # Install WooCommerce Tab Manager
  - rm -rf woocommerce-tab-manager
  - git clone ssh://git@git.onthegosystems.com:10022/wcml/woocommerce-tab-manager-mirror.git woocommerce-tab-manager

  # Install WooCommerce Dynamic Pricing
  - rm -rf woocommerce-dynamic-pricing
  - git clone ssh://git@git.onthegosystems.com:10022/wcml/woocommerce-dynamic-pricing-mirror.git woocommerce-dynamic-pricing

  # Install WooCommerce Product Bundles
  - rm -rf woocommerce-product-bundles
  - git clone ssh://git@git.onthegosystems.com:10022/wcml/woocommerce-product-bundles-mirror.git woocommerce-product-bundles

  # Install WooCommerce Product Addons
  - rm -rf woocommerce-product-addons
  - git clone ssh://git@git.onthegosystems.com:10022/wcml/woocommerce-product-addons-mirror.git woocommerce-product-addons

  # Run WPML core unit tests install script
  - cd sitepress-multilingual-cms
  - tests/install-wp-tests.sh wpml_core_test_db $WORDPRESS_DB_USER $MYSQL_ROOT_PASSWORD localhost
  # No need to run unit tests for WPML Core or the other plugins for now
  #- phpunit
  #- cd ../wpml-translation-management
  #- tests/install-wp-tests.sh wp_tm_test_db $WORDPRESS_DB_USER $MYSQL_ROOT_PASSWORD localhost latest
  #- phpunit
  #- cd ../wpml-string-translation
  #- tests/install-wp-tests.sh wp_st_test_db $WORDPRESS_DB_USER $MYSQL_ROOT_PASSWORD localhost latest
  #- phpunit

  # Run WCML unit tests install script and unit tests
  - cd ../woocommerce-multilingual
  - tests/install-wp-tests.sh wcml_test_db $WORDPRESS_DB_USER $MYSQL_ROOT_PASSWORD localhost
  - phpunit

